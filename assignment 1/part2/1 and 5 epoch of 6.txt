<15= 5000 reviews>
Fri, 16 Dec 2016 03:41:04
Loaded 158246 sentences (3.19966e+06 tokens)
Training set: 126596 sentences (2557036 tokens)
Test set: 31650 sentences (642626 tokens)
Fri, 16 Dec 2016 03:41:35
Fri, 16 Dec 2016 03:41:45
WARNING:tensorflow:From <ipython-input-8-66d61aafb82c>:16 in <module>.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
WARNING:tensorflow:From <ipython-input-8-66d61aafb82c>:16 in <module>.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
[epoch 1] Starting epoch 1
[epoch 1] Completed in 0:06:16
[epoch 1] Train set: avg. loss: 4.806  (perplexity: 122.23)
[epoch 1] Test set: avg. loss: 4.872  (perplexity: 130.61)

Fri, 16 Dec 2016 03:59:56
[epoch 2] Starting epoch 2
[epoch 2] Completed in 0:05:19
[epoch 2] Train set: avg. loss: 4.636  (perplexity: 103.08)
[epoch 2] Test set: avg. loss: 4.736  (perplexity: 113.99)

Fri, 16 Dec 2016 04:18:22
[epoch 3] Starting epoch 3
[epoch 3] Completed in 0:05:12
[epoch 3] Train set: avg. loss: 4.544  (perplexity: 94.09)
[epoch 3] Test set: avg. loss: 4.672  (perplexity: 106.91)

Fri, 16 Dec 2016 04:35:52
[epoch 4] Starting epoch 4
[epoch 4] Completed in 0:04:43
[epoch 4] Train set: avg. loss: 4.474  (perplexity: 87.72)
[epoch 4] Test set: avg. loss: 4.625  (perplexity: 102.00)

Fri, 16 Dec 2016 04:52:10
[epoch 5] Starting epoch 5
[epoch 5] Completed in 0:04:25
[epoch 5] Train set: avg. loss: 4.418  (perplexity: 82.97)
[epoch 5] Test set: avg. loss: 4.590  (perplexity: 98.51)

Fri, 16 Dec 2016 05:08:06
[epoch 6] Starting epoch 6
[epoch 6] Completed in 0:04:14
[epoch 6] Train set: avg. loss: 4.376  (perplexity: 79.54)
[epoch 6] Test set: avg. loss: 4.568  (perplexity: 96.37)

Fri, 16 Dec 2016 05:23:52





Fri, 16 Dec 2016 06:30:31
Loaded 98687 sentences (1.80916e+06 tokens)
Training set: 78949 sentences (1448058 tokens)
Test set: 19738 sentences (361099 tokens)
Fri, 16 Dec 2016 06:30:51


Fri, 16 Dec 2016 06:31:00
WARNING:tensorflow:From <ipython-input-21-66d61aafb82c>:16 in <module>.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
WARNING:tensorflow:From <ipython-input-21-66d61aafb82c>:16 in <module>.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
[epoch 1] Starting epoch 1
[epoch 1] Completed in 0:03:02
[epoch 1] Train set: avg. loss: 4.813  (perplexity: 123.15)
[epoch 1] Test set: avg. loss: 4.918  (perplexity: 136.77)

Fri, 16 Dec 2016 06:40:39
[epoch 2] Starting epoch 2
[epoch 2] Completed in 0:02:46
[epoch 2] Train set: avg. loss: 4.620  (perplexity: 101.52)
[epoch 2] Test set: avg. loss: 4.781  (perplexity: 119.18)

Fri, 16 Dec 2016 06:50:02
[epoch 3] Starting epoch 3
[epoch 3] Completed in 0:02:35
[epoch 3] Train set: avg. loss: 4.513  (perplexity: 91.17)
[epoch 3] Test set: avg. loss: 4.718  (perplexity: 111.89)

Fri, 16 Dec 2016 06:58:59
[epoch 4] Starting epoch 4
[epoch 4] Completed in 0:02:28
[epoch 4] Train set: avg. loss: 4.436  (perplexity: 84.41)
[epoch 4] Test set: avg. loss: 4.678  (perplexity: 107.54)

Fri, 16 Dec 2016 07:07:47
[epoch 5] Starting epoch 5
[epoch 5] Completed in 0:02:23
[epoch 5] Train set: avg. loss: 4.379  (perplexity: 79.76)
[epoch 5] Test set: avg. loss: 4.655  (perplexity: 105.09)

Fri, 16 Dec 2016 07:16:41
[epoch 6] Starting epoch 6
[epoch 6] Completed in 0:02:17
[epoch 6] Train set: avg. loss: 4.330  (perplexity: 75.94)
[epoch 6] Test set: avg. loss: 4.637  (perplexity: 103.22)

Fri, 16 Dec 2016 07:25:11



print time.strftime("%a, %d %b %Y %H:%M:%S", time.localtime())

lm_name = '15'
trained_filename = './tf_saved/rnnlm_trained' + '_' + lm_name
idx = 0
ts_not_for_not = 0.0
for s in open('1t.txt'):
    ts_not_for_not = ts_not_for_not + load_and_score([[q.strip() for q in s.split('\n')]], silent=True)
    idx = idx + 1
print time.strftime("%a, %d %b %Y %H:%M:%S", time.localtime())
print 'average not_for_not:', ts_not_for_not/idx

idx = 0
ts_not_for_hot = 0.0
for s in open('5t.txt'):
    ts_not_for_hot = ts_not_for_hot + load_and_score([[q.strip() for q in s.split('\n')]], silent=True)
    idx = idx + 1
print 'average not_for_hot:', ts_not_for_hot/idx

print time.strftime("%a, %d %b %Y %H:%M:%S", time.localtime())

print time.strftime("%a, %d %b %Y %H:%M:%S", time.localtime())
​
lm_name = '15'
trained_filename = './tf_saved/rnnlm_trained' + '_' + lm_name
idx = 0
ts_not_for_not = 0.0
for s in open('1t.txt'):
    ts_not_for_not = ts_not_for_not + load_and_score([[q.strip() for q in s.split('\n')]], silent=True)
    idx = idx + 1
print time.strftime("%a, %d %b %Y %H:%M:%S", time.localtime())
print 'average not_for_not:', ts_not_for_not/idx
​
idx = 0
ts_not_for_hot = 0.0
for s in open('5t.txt'):
    ts_not_for_hot = ts_not_for_hot + load_and_score([[q.strip() for q in s.split('\n')]], silent=True)
    idx = idx + 1
print 'average not_for_hot:', ts_not_for_hot/idx
​
print time.strftime("%a, %d %b %Y %H:%M:%S", time.localtime())
​
Fri, 16 Dec 2016 07:59:53
Fri, 16 Dec 2016 08:15:37
average not_for_not: -7.44596341158
average not_for_hot: -7.43838603977
Fri, 16 Dec 2016 08:31:14
In [44]:

[s.strip().split()], silent=True
print time.strftime("%a, %d %b %Y %H:%M:%S", time.localtime())
​
lm_name = '55'
trained_filename = './tf_saved/rnnlm_trained' + '_' + lm_name
idx = 0
ts_hot_for_not = 0.0
for s in open('1t.txt'):
    ts_hot_for_not = ts_hot_for_not + load_and_score([[q.strip() for q in s.split('\n')]], silent=True)
    idx = idx + 1
print time.strftime("%a, %d %b %Y %H:%M:%S", time.localtime())
print 'average hot_for_not:', ts_hot_for_not/idx
​
idx = 0
ts_hot_for_hot = 0.0
for s in open('5t.txt'):
    ts_hot_for_hot = ts_hot_for_hot + load_and_score([[q.strip() for q in s.split('\n')]], silent=True)
    idx = idx + 1
print 'average hot_for_hot:', ts_hot_for_hot/idx
​
print time.strftime("%a, %d %b %Y %H:%M:%S", time.localtime())
​
Fri, 16 Dec 2016 08:31:14
Fri, 16 Dec 2016 08:46:58
average hot_for_not: -6.72165517153
average hot_for_hot: -6.71585210912
Fri, 16 Dec 2016 09:02:38